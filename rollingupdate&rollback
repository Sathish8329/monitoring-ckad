kubectl create -f deployment.yaml to create a deployment
kubectl get deployment to see the deployments
kubectl apply -f deployment.yaml to update a deployment
kubectl set image deployment/myapp-deployment nginx=nginx:1
kubectl rollout status deployment/myapp - to see the status .
kubectl rollout history deployment/myapp - see the history of rollout in deployment
kubectl rollout undo deployment/myapp - to go to the prevous version.
 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  strategy:
    type: Recreate

Use RollingUpdate for applications that can handle zero-downtime updates, where it is acceptable for old and new versions to coexist temporarily.
Use Recreate for applications where it is crucial to ensure that only one version of the application is running at any time, even at the cost of temporary downtime.

rolling update
kubectl set image deployment/my-deployment mycontainer=myimage:v3

rollbacks
kubectl rollout undo deployment/my-deployment
